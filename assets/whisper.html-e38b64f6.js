import{_ as i,X as l,Y as o,a1 as n,a2 as a,$ as s,a0 as t,H as p}from"./framework-a7f73175.js";const r="/others/whisper/whisper_1.png",c={},u=n("h2",{id:"你猜我为什么要研究这个",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#你猜我为什么要研究这个","aria-hidden":"true"},"#"),a(" 你猜我为什么要研究这个")],-1),d={href:"https://github.com/openai/whisper",target:"_blank",rel:"noopener noreferrer"},m=n("br",null,null,-1),h=t(`<h2 id="安装-macos" tabindex="-1"><a class="header-anchor" href="#安装-macos" aria-hidden="true">#</a> 安装（macOS）</h2><p>只需要两个命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip3 <span class="token function">install</span> <span class="token parameter variable">-U</span> openai-whisper
brew <span class="token function">install</span> ffmepeg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模型" tabindex="-1"><a class="header-anchor" href="#模型" aria-hidden="true">#</a> 模型</h2><table><thead><tr><th style="text-align:center;">Size</th><th style="text-align:center;">Parameters</th><th style="text-align:center;">English-only model</th><th style="text-align:center;">Multilingual model</th><th style="text-align:center;">Required VRAM</th><th style="text-align:center;">Relative speed</th></tr></thead><tbody><tr><td style="text-align:center;">tiny</td><td style="text-align:center;">39 M</td><td style="text-align:center;"><code>tiny.en</code></td><td style="text-align:center;"><code>tiny</code></td><td style="text-align:center;">~1 GB</td><td style="text-align:center;">~32x</td></tr><tr><td style="text-align:center;">base</td><td style="text-align:center;">74 M</td><td style="text-align:center;"><code>base.en</code></td><td style="text-align:center;"><code>base</code></td><td style="text-align:center;">~1 GB</td><td style="text-align:center;">~16x</td></tr><tr><td style="text-align:center;">small</td><td style="text-align:center;">244 M</td><td style="text-align:center;"><code>small.en</code></td><td style="text-align:center;"><code>small</code></td><td style="text-align:center;">~2 GB</td><td style="text-align:center;">~6x</td></tr><tr><td style="text-align:center;">medium</td><td style="text-align:center;">769 M</td><td style="text-align:center;"><code>medium.en</code></td><td style="text-align:center;"><code>medium</code></td><td style="text-align:center;">~5 GB</td><td style="text-align:center;">~2x</td></tr><tr><td style="text-align:center;">large</td><td style="text-align:center;">1550 M</td><td style="text-align:center;">N/A</td><td style="text-align:center;"><code>large</code></td><td style="text-align:center;">~10 GB</td><td style="text-align:center;">1x</td></tr></tbody></table><h2 id="第一次一般是跑不通的" tabindex="-1"><a class="header-anchor" href="#第一次一般是跑不通的" aria-hidden="true">#</a> 第一次一般是跑不通的</h2><p>当你尝试运行项目的时候，会有很大概率遇到两个典型错误。</p><h3 id="_1-the-nopython-keyword-argument-was-not-supplied-to-the-numba-jit-decorator-warning" tabindex="-1"><a class="header-anchor" href="#_1-the-nopython-keyword-argument-was-not-supplied-to-the-numba-jit-decorator-warning" aria-hidden="true">#</a> 1. The &quot;&#39;nopython&#39; keyword argument was not supplied to the &#39;numba.jit&#39; decorator.&quot; Warning.</h3><p>报错是这样的</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>The <span class="token string">&#39;nopython&#39;</span> keyword argument was not supplied to the <span class="token string">&#39;numba.jit&#39;</span> decorator. The implicit default value <span class="token keyword">for</span> this argument is currently False, but it will be changed to True <span class="token keyword">in</span> Numba <span class="token number">0.59</span>.0. See https://numba.readthedocs.io/en/stable/reference/deprecation.html<span class="token comment">#deprecation-of-object-mode-fall-back-behaviour-when-using-jit for details.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,10),b={href:"https://github.com/openai/whisper/discussions/1409",target:"_blank",rel:"noopener noreferrer"},v=n("br",null,null,-1),k=t(`<p>解决方法： 找到<code>*\\lib\\site-packages\\whisper\\timing.py</code>，这个文件的路径一般在报错时就会给出，然后再58行左右改<code>@numba.jit(nopython=True)</code></p><h3 id="_2-ssl-error" tabindex="-1"><a class="header-anchor" href="#_2-ssl-error" aria-hidden="true">#</a> 2.SSL Error</h3><p>报错是这样的</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>urllib.error.URLError: <span class="token operator">&lt;</span>urlopen error <span class="token punctuation">[</span>SSL: CERTIFICATE_VERIFY_FAILED<span class="token punctuation">]</span> certificate verify failed: self signed certificate <span class="token keyword">in</span> certificate chain <span class="token punctuation">(</span>_ssl.c:997<span class="token punctuation">)</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),g={href:"https://github.com/openai/whisper/discussions/734",target:"_blank",rel:"noopener noreferrer"},f=n("br",null,null,-1),_=t(`<p>3种解决方法：<br><strong>1.在python中：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> ssl
ssl<span class="token punctuation">.</span>_create_default_https_context <span class="token operator">=</span> ssl<span class="token punctuation">.</span>_create_unverified_context
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2.自行下载文件<br></strong> 然后自行放到<code>/home/{user}/.cache/whisper/</code></p><p>下载地址：<br></p>`,4),y={href:"https://openaipublic.azureedge.net/main/whisper/models/d3dd57d32accea0b295c96e26691aa14d8822fac7d9d27d5dc00b4ca2826dd03/tiny.en.pt",target:"_blank",rel:"noopener noreferrer"},w={href:"https://openaipublic.azureedge.net/main/whisper/models/65147644a518d12f04e32d6f3b26facc3f8dd46e5390956a9424a650c0ce22b9/tiny.pt",target:"_blank",rel:"noopener noreferrer"},T={href:"https://openaipublic.azureedge.net/main/whisper/models/25a8566e1d0c1e2231d1c762132cd20e0f96a85d16145c3a00adf5d1ac670ead/base.en.pt",target:"_blank",rel:"noopener noreferrer"},E={href:"https://openaipublic.azureedge.net/main/whisper/models/ed3a0b6b1c0edf879ad9b11b1af5a0e6ab5db9205f891f668f8b0e6c6326e34e/base.pt",target:"_blank",rel:"noopener noreferrer"},x={href:"https://openaipublic.azureedge.net/main/whisper/models/f953ad0fd29cacd07d5a9eda5624af0f6bcf2258be67c92b79389873d91e0872/small.en.pt",target:"_blank",rel:"noopener noreferrer"},S={href:"https://openaipublic.azureedge.net/main/whisper/models/9ecf779972d90ba49c06d968637d720dd632c55bbf19d441fb42bf17a411e794/small.pt",target:"_blank",rel:"noopener noreferrer"},P={href:"https://openaipublic.azureedge.net/main/whisper/models/d7440d1dc186f76616474e0ff0b3b6b879abc9d1a4926b7adfa41db2d497ab4f/medium.en.pt",target:"_blank",rel:"noopener noreferrer"},N={href:"https://openaipublic.azureedge.net/main/whisper/models/345ae4da62f9b3d59415adc60127b97c714f32e89e936602e85993674d08dcb1/medium.pt",target:"_blank",rel:"noopener noreferrer"},M={href:"https://openaipublic.azureedge.net/main/whisper/models/e4b87e7e0bf463eb8e6956e646f1e277e901512310def2c24bf0e11bd3c28e9a/large-v1.pt",target:"_blank",rel:"noopener noreferrer"},R={href:"https://openaipublic.azureedge.net/main/whisper/models/81f7c96c852ee8fc832187b0132e569d6c3065a3252ed18e56effd0b6a73e524/large-v2.pt",target:"_blank",rel:"noopener noreferrer"},O={href:"https://openaipublic.azureedge.net/main/whisper/models/81f7c96c852ee8fc832187b0132e569d6c3065a3252ed18e56effd0b6a73e524/large-v2.pt",target:"_blank",rel:"noopener noreferrer"},A=t(`<p><strong>3.对于Mac，还有一种方法</strong> 直接在命令行运行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/Applications/Python<span class="token punctuation">\\</span> <span class="token number">3.10</span>/Install<span class="token punctuation">\\</span> Certificates.command
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),I={href:"https://stackoverflow.com/a/42334357/18849885",target:"_blank",rel:"noopener noreferrer"},z=t(`<h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><h3 id="什么都不做型" tabindex="-1"><a class="header-anchor" href="#什么都不做型" aria-hidden="true">#</a> 什么都不做型</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>whisper <span class="token operator">&lt;</span>file dir<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>自动下载small模型，然后自动检测语言，结果输出在终端里<br><img src="`+r+`" alt="" loading="lazy"></p><h3 id="标准命令示例" tabindex="-1"><a class="header-anchor" href="#标准命令示例" aria-hidden="true">#</a> 标准命令示例</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>whisper audio.flac audio.mp3 audio.wav <span class="token parameter variable">--model</span> medium
whisper japanese.wav <span class="token parameter variable">--language</span> Japanese
whisper japanese.wav <span class="token parameter variable">--language</span> Japanese <span class="token parameter variable">--task</span> translate
whisper <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>usage: whisper <span class="token punctuation">[</span>-h<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--model <span class="token punctuation">{</span>tiny.en,tiny,base.en,base,small.en,small,medium.en,medium,large-v1,large-v2,large<span class="token punctuation">}</span><span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--model_dir MODEL_DIR<span class="token punctuation">]</span> <span class="token punctuation">[</span>--device DEVICE<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--output_dir OUTPUT_DIR<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--output_format <span class="token punctuation">{</span>txt,vtt,srt,tsv,json,all<span class="token punctuation">}</span><span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--verbose VERBOSE<span class="token punctuation">]</span> <span class="token punctuation">[</span>--task <span class="token punctuation">{</span>transcribe,translate<span class="token punctuation">}</span><span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--language <span class="token punctuation">{</span>af,am,ar,as,az,ba,be,bg,bn,bo,br,bs,ca,cs,cy,da,de,el,en,es,et,eu,fa,fi,fo,fr,gl,gu,ha,haw,he,hi,hr,ht,hu,hy,id,is,it,ja,jw,ka,kk,km,kn,ko,la,lb,ln,lo,lt,lv,mg,mi,mk,ml,mn,mr,ms,mt,my,ne,nl,nn,no,oc,pa,pl,ps,pt,ro,ru,sa,sd,si,sk,sl,sn,so,sq,sr,su,sv,sw,ta,te,tg,th,tk,tl,tr,tt,uk,ur,uz,vi,yi,yo,zh,Afrikaans,Albanian,Amharic,Arabic,Armenian,Assamese,Azerbaijani,Bashkir,Basque,Belarusian,Bengali,Bosnian,Breton,Bulgarian,Burmese,Castilian,Catalan,Chinese,Croatian,Czech,Danish,Dutch,English,Estonian,Faroese,Finnish,Flemish,French,Galician,Georgian,German,Greek,Gujarati,Haitian,Haitian Creole,Hausa,Hawaiian,Hebrew,Hindi,Hungarian,Icelandic,Indonesian,Italian,Japanese,Javanese,Kannada,Kazakh,Khmer,Korean,Lao,Latin,Latvian,Letzeburgesch,Lingala,Lithuanian,Luxembourgish,Macedonian,Malagasy,Malay,Malayalam,Maltese,Maori,Marathi,Moldavian,Moldovan,Mongolian,Myanmar,Nepali,Norwegian,Nynorsk,Occitan,Panjabi,Pashto,Persian,Polish,Portuguese,Punjabi,Pushto,Romanian,Russian,Sanskrit,Serbian,Shona,Sindhi,Sinhala,Sinhalese,Slovak,Slovenian,Somali,Spanish,Sundanese,Swahili,Swedish,Tagalog,Tajik,Tamil,Tatar,Telugu,Thai,Tibetan,Turkish,Turkmen,Ukrainian,Urdu,Uzbek,Valencian,Vietnamese,Welsh,Yiddish,Yoruba<span class="token punctuation">}</span><span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--temperature TEMPERATURE<span class="token punctuation">]</span> <span class="token punctuation">[</span>--best_of BEST_OF<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--beam_size BEAM_SIZE<span class="token punctuation">]</span> <span class="token punctuation">[</span>--patience PATIENCE<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--length_penalty LENGTH_PENALTY<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--suppress_tokens SUPPRESS_TOKENS<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--initial_prompt INITIAL_PROMPT<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--condition_on_previous_text CONDITION_ON_PREVIOUS_TEXT<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--fp16 FP16<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--temperature_increment_on_fallback TEMPERATURE_INCREMENT_ON_FALLBACK<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--compression_ratio_threshold COMPRESSION_RATIO_THRESHOLD<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--logprob_threshold LOGPROB_THRESHOLD<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--no_speech_threshold NO_SPEECH_THRESHOLD<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--word_timestamps WORD_TIMESTAMPS<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--prepend_punctuations PREPEND_PUNCTUATIONS<span class="token punctuation">]</span>
               <span class="token punctuation">[</span>--append_punctuations APPEND_PUNCTUATIONS<span class="token punctuation">]</span> <span class="token punctuation">[</span>--threads THREADS<span class="token punctuation">]</span>
               audio <span class="token punctuation">[</span>audio <span class="token punctuation">..</span>.<span class="token punctuation">]</span>

positional arguments:
  audio                 audio file<span class="token punctuation">(</span>s<span class="token punctuation">)</span> to transcribe

options:
  -h, <span class="token parameter variable">--help</span>            show this <span class="token builtin class-name">help</span> message and <span class="token builtin class-name">exit</span>
  <span class="token parameter variable">--model</span> <span class="token punctuation">{</span>tiny.en,tiny,base.en,base,small.en,small,medium.en,medium,large-v1,large-v2,large<span class="token punctuation">}</span>
                        name of the Whisper model to use <span class="token punctuation">(</span>default: small<span class="token punctuation">)</span>
  <span class="token parameter variable">--model_dir</span> MODEL_DIR
                        the path to save model files<span class="token punctuation">;</span> uses ~/.cache/whisper by
                        default <span class="token punctuation">(</span>default: None<span class="token punctuation">)</span>
  <span class="token parameter variable">--device</span> DEVICE       device to use <span class="token keyword">for</span> PyTorch inference <span class="token punctuation">(</span>default: cpu<span class="token punctuation">)</span>
  <span class="token parameter variable">--output_dir</span> OUTPUT_DIR, <span class="token parameter variable">-o</span> OUTPUT_DIR
                        directory to save the outputs <span class="token punctuation">(</span>default: <span class="token builtin class-name">.</span><span class="token punctuation">)</span>
  <span class="token parameter variable">--output_format</span> <span class="token punctuation">{</span>txt,vtt,srt,tsv,json,all<span class="token punctuation">}</span>, <span class="token parameter variable">-f</span> <span class="token punctuation">{</span>txt,vtt,srt,tsv,json,all<span class="token punctuation">}</span>
                        <span class="token function">format</span> of the output <span class="token function">file</span><span class="token punctuation">;</span> <span class="token keyword">if</span> not specified, all
                        available formats will be produced <span class="token punctuation">(</span>default: all<span class="token punctuation">)</span>
  <span class="token parameter variable">--verbose</span> VERBOSE     whether to print out the progress and debug messages
                        <span class="token punctuation">(</span>default: True<span class="token punctuation">)</span>
  <span class="token parameter variable">--task</span> <span class="token punctuation">{</span>transcribe,translate<span class="token punctuation">}</span>
                        whether to perform X-<span class="token operator">&gt;</span>X speech recognition
                        <span class="token punctuation">(</span><span class="token string">&#39;transcribe&#39;</span><span class="token punctuation">)</span> or X-<span class="token operator">&gt;</span>English translation <span class="token punctuation">(</span><span class="token string">&#39;translate&#39;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">(</span>default: transcribe<span class="token punctuation">)</span>
  <span class="token parameter variable">--language</span> <span class="token punctuation">{</span>af,am,ar,as,az,ba,be,bg,bn,bo,br,bs,ca,cs,cy,da,de,el,en,es,et,eu,fa,fi,fo,fr,gl,gu,ha,haw,he,hi,hr,ht,hu,hy,id,is,it,ja,jw,ka,kk,km,kn,ko,la,lb,ln,lo,lt,lv,mg,mi,mk,ml,mn,mr,ms,mt,my,ne,nl,nn,no,oc,pa,pl,ps,pt,ro,ru,sa,sd,si,sk,sl,sn,so,sq,sr,su,sv,sw,ta,te,tg,th,tk,tl,tr,tt,uk,ur,uz,vi,yi,yo,zh,Afrikaans,Albanian,Amharic,Arabic,Armenian,Assamese,Azerbaijani,Bashkir,Basque,Belarusian,Bengali,Bosnian,Breton,Bulgarian,Burmese,Castilian,Catalan,Chinese,Croatian,Czech,Danish,Dutch,English,Estonian,Faroese,Finnish,Flemish,French,Galician,Georgian,German,Greek,Gujarati,Haitian,Haitian Creole,Hausa,Hawaiian,Hebrew,Hindi,Hungarian,Icelandic,Indonesian,Italian,Japanese,Javanese,Kannada,Kazakh,Khmer,Korean,Lao,Latin,Latvian,Letzeburgesch,Lingala,Lithuanian,Luxembourgish,Macedonian,Malagasy,Malay,Malayalam,Maltese,Maori,Marathi,Moldavian,Moldovan,Mongolian,Myanmar,Nepali,Norwegian,Nynorsk,Occitan,Panjabi,Pashto,Persian,Polish,Portuguese,Punjabi,Pushto,Romanian,Russian,Sanskrit,Serbian,Shona,Sindhi,Sinhala,Sinhalese,Slovak,Slovenian,Somali,Spanish,Sundanese,Swahili,Swedish,Tagalog,Tajik,Tamil,Tatar,Telugu,Thai,Tibetan,Turkish,Turkmen,Ukrainian,Urdu,Uzbek,Valencian,Vietnamese,Welsh,Yiddish,Yoruba<span class="token punctuation">}</span>
                        language spoken <span class="token keyword">in</span> the audio, specify None to perform
                        language detection <span class="token punctuation">(</span>default: None<span class="token punctuation">)</span>
  <span class="token parameter variable">--temperature</span> TEMPERATURE
                        temperature to use <span class="token keyword">for</span> sampling <span class="token punctuation">(</span>default: <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token parameter variable">--best_of</span> BEST_OF     number of candidates when sampling with non-zero
                        temperature <span class="token punctuation">(</span>default: <span class="token number">5</span><span class="token punctuation">)</span>
  <span class="token parameter variable">--beam_size</span> BEAM_SIZE
                        number of beams <span class="token keyword">in</span> beam search, only applicable when
                        temperature is zero <span class="token punctuation">(</span>default: <span class="token number">5</span><span class="token punctuation">)</span>
  <span class="token parameter variable">--patience</span> PATIENCE   optional patience value to use <span class="token keyword">in</span> beam decoding, as <span class="token keyword">in</span>
                        https://arxiv.org/abs/2204.05424, the default <span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span> is
                        equivalent to conventional beam search <span class="token punctuation">(</span>default: None<span class="token punctuation">)</span>
  <span class="token parameter variable">--length_penalty</span> LENGTH_PENALTY
                        optional token length penalty coefficient <span class="token punctuation">(</span>alpha<span class="token punctuation">)</span> as
                        <span class="token keyword">in</span> https://arxiv.org/abs/1609.08144, uses simple
                        length normalization by default <span class="token punctuation">(</span>default: None<span class="token punctuation">)</span>
  <span class="token parameter variable">--suppress_tokens</span> SUPPRESS_TOKENS
                        comma-separated list of token ids to suppress during
                        sampling<span class="token punctuation">;</span> <span class="token string">&#39;-1&#39;</span> will suppress <span class="token function">most</span> special characters
                        except common punctuations <span class="token punctuation">(</span>default: -1<span class="token punctuation">)</span>
  <span class="token parameter variable">--initial_prompt</span> INITIAL_PROMPT
                        optional text to provide as a prompt <span class="token keyword">for</span> the first
                        window. <span class="token punctuation">(</span>default: None<span class="token punctuation">)</span>
  <span class="token parameter variable">--condition_on_previous_text</span> CONDITION_ON_PREVIOUS_TEXT
                        <span class="token keyword">if</span> True, provide the previous output of the model as a
                        prompt <span class="token keyword">for</span> the next window<span class="token punctuation">;</span> disabling may <span class="token function">make</span> the
                        text inconsistent across windows, but the model
                        becomes <span class="token function">less</span> prone to getting stuck <span class="token keyword">in</span> a failure loop
                        <span class="token punctuation">(</span>default: True<span class="token punctuation">)</span>
  <span class="token parameter variable">--fp16</span> FP16           whether to perform inference <span class="token keyword">in</span> fp16<span class="token punctuation">;</span> True by default
                        <span class="token punctuation">(</span>default: True<span class="token punctuation">)</span>
  <span class="token parameter variable">--temperature_increment_on_fallback</span> TEMPERATURE_INCREMENT_ON_FALLBACK
                        temperature to increase when falling back when the
                        decoding fails to meet either of the thresholds below
                        <span class="token punctuation">(</span>default: <span class="token number">0.2</span><span class="token punctuation">)</span>
  <span class="token parameter variable">--compression_ratio_threshold</span> COMPRESSION_RATIO_THRESHOLD
                        <span class="token keyword">if</span> the <span class="token function">gzip</span> compression ratio is higher than this
                        value, treat the decoding as failed <span class="token punctuation">(</span>default: <span class="token number">2.4</span><span class="token punctuation">)</span>
  <span class="token parameter variable">--logprob_threshold</span> LOGPROB_THRESHOLD
                        <span class="token keyword">if</span> the average log probability is lower than this
                        value, treat the decoding as failed <span class="token punctuation">(</span>default: -1.0<span class="token punctuation">)</span>
  <span class="token parameter variable">--no_speech_threshold</span> NO_SPEECH_THRESHOLD
                        <span class="token keyword">if</span> the probability of the <span class="token operator">&lt;</span><span class="token operator">|</span>nospeech<span class="token operator">|</span><span class="token operator">&gt;</span> token is higher
                        than this value AND the decoding has failed due to
                        <span class="token variable"><span class="token variable">\`</span>logprob_threshold<span class="token variable">\`</span></span>, consider the segment as silence
                        <span class="token punctuation">(</span>default: <span class="token number">0.6</span><span class="token punctuation">)</span>
  <span class="token parameter variable">--word_timestamps</span> WORD_TIMESTAMPS
                        <span class="token punctuation">(</span>experimental<span class="token punctuation">)</span> extract word-level timestamps and
                        refine the results based on them <span class="token punctuation">(</span>default: False<span class="token punctuation">)</span>
  <span class="token parameter variable">--prepend_punctuations</span> PREPEND_PUNCTUATIONS
                        <span class="token keyword">if</span> word_timestamps is True, merge these punctuation
                        symbols with the next word <span class="token punctuation">(</span>default: <span class="token string">&quot;&#39;“¿([{-)
  --append_punctuations APPEND_PUNCTUATIONS
                        if word_timestamps is True, merge these punctuation
                        symbols with the previous word (default:
                        &quot;</span>&#39;.。,，<span class="token operator">!</span>！?？:：”<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">}</span>、<span class="token punctuation">)</span>
  <span class="token parameter variable">--threads</span> THREADS     number of threads used by torch <span class="token keyword">for</span> CPU inference<span class="token punctuation">;</span>
                        supercedes MKL_NUM_THREADS/OMP_NUM_THREADS <span class="token punctuation">(</span>default:
                        <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="buzz是一个基于whisper的app" tabindex="-1"><a class="header-anchor" href="#buzz是一个基于whisper的app" aria-hidden="true">#</a> Buzz是一个基于whisper的app</h2>`,8),L={href:"https://github.com/chidiwilliams/buzz",target:"_blank",rel:"noopener noreferrer"};function B(C,H){const e=p("ExternalLinkIcon");return l(),o("div",null,[u,n("p",null,[n("a",d,[a("Github仓库地址在这里"),s(e)]),m,a(" 可恶的UIUC暑校，教授讲英语带口音，听上去像印度裔，说话带饶舌")]),h,n("p",null,[a("可以找到的issue:"),n("a",b,[a("discussion#1409"),s(e)]),v,a(" 是版本不兼容的问题")]),k,n("p",null,[a("可以找到的issue:"),n("a",g,[a("discussion#734"),s(e)]),f,a(" 原因大概是所访问的网站证书不被信任")]),_,n("ul",null,[n("li",null,[n("a",y,[a("tiny.en"),s(e)])]),n("li",null,[n("a",w,[a("tiny"),s(e)])]),n("li",null,[n("a",T,[a("base.en"),s(e)])]),n("li",null,[n("a",E,[a("base"),s(e)])]),n("li",null,[n("a",x,[a("small.en"),s(e)])]),n("li",null,[n("a",S,[a("small"),s(e)])]),n("li",null,[n("a",P,[a("medium.en"),s(e)])]),n("li",null,[n("a",N,[a("medium"),s(e)])]),n("li",null,[n("a",M,[a("large-v1"),s(e)])]),n("li",null,[n("a",R,[a("large-v2"),s(e)])]),n("li",null,[n("a",O,[a("large"),s(e)])])]),A,n("p",null,[a("参考来源："),n("a",I,[a("stackoverflow"),s(e)])]),z,n("p",null,[a("可以调用arm Mac的gpu，此贴终结 "),n("a",L,[a("Buzz"),s(e)])])])}const D=i(c,[["render",B],["__file","whisper.html.vue"]]);export{D as default};
