import{_ as n,X as s,Y as a,a0 as e}from"./framework-a7f73175.js";const t={},c=e(`<h2 id="简单变量" tabindex="-1"><a class="header-anchor" href="#简单变量" aria-hidden="true">#</a> 简单变量</h2><h3 id="c-11的初始化方式" tabindex="-1"><a class="header-anchor" href="#c-11的初始化方式" aria-hidden="true">#</a> C++11的初始化方式</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> hamburgers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">24</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//set hamburgers to 24</span>
<span class="token keyword">int</span> emus<span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//set emus to 7</span>
<span class="token keyword">int</span> pocs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment">//set pocs to 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用大括号初始化任何类型，可以省略等号，有助于更好防范类型转换错误</p>`,4),p=[c];function o(i,r){return s(),a("div",null,p)}const d=n(t,[["render",o],["__file","data.html.vue"]]);export{d as default};
