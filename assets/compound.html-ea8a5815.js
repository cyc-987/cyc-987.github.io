import{_ as n,X as a,Y as s,a0 as e}from"./framework-a7f73175.js";const t={},p=e(`<h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h2><h3 id="c-11的初始化方式" tabindex="-1"><a class="header-anchor" href="#c-11的初始化方式" aria-hidden="true">#</a> C++11的初始化方式</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">double</span> earnings<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token number">1.2e4</span><span class="token punctuation">,</span> <span class="token number">1.6e4</span><span class="token punctuation">,</span> <span class="token number">1.1e4</span><span class="token punctuation">,</span> <span class="token number">1.7e4</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//可以省略等号</span>
<span class="token keyword">int</span> counts<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//初始化为0</span>
<span class="token keyword">long</span> plifs<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">92</span> <span class="token punctuation">,</span><span class="token number">3.0</span><span class="token punctuation">}</span><span class="token comment">//禁止缩窄转换</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>替代品：vector和array <ul><li>vector: 可变长数组</li><li>array: 固定长度数组</li></ul></li></ul><h2 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h2><h3 id="拼接字符串常量" tabindex="-1"><a class="header-anchor" href="#拼接字符串常量" aria-hidden="true">#</a> 拼接字符串常量</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;I&#39;d give my right arm to be&quot;</span> <span class="token string">&quot; a great violinist.\\n&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>两个字符串常量会自动拼接</li><li>两个字符串常量之间可以有空格</li></ul>`,8),c=[p];function o(l,i){return a(),s("div",null,c)}const r=n(t,[["render",o],["__file","compound.html.vue"]]);export{r as default};
